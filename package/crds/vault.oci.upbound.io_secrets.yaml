---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: secrets.vault.oci.upbound.io
spec:
  group: vault.oci.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - oci
    kind: Secret
    listKind: SecretList
    plural: secrets
    singular: secret
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Secret is the Schema for the Secrets API. Provides the Secret
          resource in Oracle Cloud Infrastructure Vault service
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SecretSpec defines the desired state of Secret
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  compartmentId:
                    description: (Updatable) The OCID of the compartment where you
                      want to create the secret.
                    type: string
                  compartmentIdRef:
                    description: Reference to a Compartment in identity to populate
                      compartmentId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  compartmentIdSelector:
                    description: Selector for a Compartment in identity to populate
                      compartmentId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  definedTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Defined tags for this resource. Each
                      key is predefined and scoped to a namespace. For more information,
                      see Resource Tags. Example: {"Operations.CostCenter": "42"}'
                    type: object
                  description:
                    description: (Updatable) A brief description of the secret. Avoid
                      entering confidential information.
                    type: string
                  freeformTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Free-form tags for this resource. Each
                      tag is a simple key-value pair with no predefined name, type,
                      or namespace. For more information, see Resource Tags. Example:
                      {"Department": "Finance"}'
                    type: object
                  keyId:
                    description: The OCID of the master encryption key that is used
                      to encrypt the secret. You must specify a symmetric key to encrypt
                      the secret during import to the vault. You cannot encrypt secrets
                      with asymmetric keys. Furthermore, the key must exist in the
                      vault that you specify.
                    type: string
                  keyIdRef:
                    description: Reference to a Key in kms to populate keyId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  keyIdSelector:
                    description: Selector for a Key in kms to populate keyId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  metadata:
                    additionalProperties:
                      type: string
                    description: (Updatable) Additional metadata that you can use
                      to provide context about how to use the secret during rotation
                      or other administrative tasks. For example, for a secret that
                      you use to connect to a database, the additional metadata might
                      specify the connection endpoint and the connection string. Provide
                      additional metadata as key-value pairs.
                    type: object
                  rotationConfig:
                    description: (Updatable) Defines the frequency of the rotation
                      and the information about the target system
                    items:
                      properties:
                        isScheduledRotationEnabled:
                          description: (Updatable) Enables auto rotation, when set
                            to true rotationInterval must be set.
                          type: boolean
                        rotationInterval:
                          description: (Updatable) The time interval that indicates
                            the frequency for rotating secret data, as described in
                            ISO 8601 format. The minimum value is 1 day and maximum
                            value is 360 days. For example, if you want to set the
                            time interval for rotating a secret data as 30 days, the
                            duration is expressed as "P30D."
                          type: string
                        targetSystemDetails:
                          description: (Updatable) The TargetSystemDetails provides
                            the targetSystem type and type-specific connection metadata
                          items:
                            properties:
                              adbId:
                                description: (Updatable) The unique identifier (OCID)
                                  for the autonomous database that Vault Secret connects
                                  to.
                                type: string
                              functionId:
                                description: (Updatable) The unique identifier (OCID)
                                  of the Oracle Cloud Infrastructure Functions that
                                  vault secret connects to.
                                type: string
                              targetSystemType:
                                description: (Updatable) Unique identifier of the
                                  target system that Vault Secret connects to.
                                type: string
                            required:
                            - targetSystemType
                            type: object
                          type: array
                      required:
                      - targetSystemDetails
                      type: object
                    type: array
                  secretContent:
                    description: (Updatable) The content of the secret and metadata
                      to help identify it.
                    items:
                      properties:
                        content:
                          description: (Updatable) The base64-encoded content of the
                            secret.
                          type: string
                        contentType:
                          description: (Updatable) The base64-encoded content of the
                            secret.
                          type: string
                        name:
                          description: (Updatable) Names should be unique within a
                            secret. Valid characters are uppercase or lowercase letters,
                            numbers, hyphens, underscores, and periods.
                          type: string
                        stage:
                          description: (Updatable) The rotation state of the secret
                            content. The default is CURRENT, meaning that the secret
                            is currently in use. A secret version that you mark as
                            PENDING is staged and available for use, but you don't
                            yet want to rotate it into current, active use. For example,
                            you might create or update a secret and mark its rotation
                            state as PENDING if you haven't yet updated the secret
                            on the target system. When creating a secret, only the
                            value CURRENT is applicable, although the value LATEST
                            is also automatically applied. When updating a secret,
                            you can specify a version's rotation state as either CURRENT
                            or PENDING.
                          type: string
                      required:
                      - contentType
                      type: object
                    type: array
                  secretName:
                    description: A user-friendly name for the secret. Secret names
                      should be unique within a vault. Avoid entering confidential
                      information. Valid characters are uppercase or lowercase letters,
                      numbers, hyphens, underscores, and periods.
                    type: string
                  secretRules:
                    description: (Updatable) A list of rules to control how the secret
                      is used and managed.
                    items:
                      properties:
                        isEnforcedOnDeletedSecretVersions:
                          description: (Applicable when rule_type=SECRET_REUSE_RULE)
                            (Updatable) A property indicating whether the rule is
                            applied even if the secret version with the content you
                            are trying to reuse was deleted.
                          type: boolean
                        isSecretContentRetrievalBlockedOnExpiry:
                          description: (Applicable when rule_type=SECRET_EXPIRY_RULE)
                            (Updatable) A property indicating whether to block retrieval
                            of the secret content, on expiry. The default is false.
                            If the secret has already expired and you would like to
                            retrieve the secret contents, you need to edit the secret
                            rule to disable this property, to allow reading the secret
                            content.
                          type: boolean
                        ruleType:
                          description: (Updatable) The type of rule, which either
                            controls when the secret contents expire or whether they
                            can be reused.
                          type: string
                        secretVersionExpiryInterval:
                          description: (Applicable when rule_type=SECRET_EXPIRY_RULE)
                            (Updatable) A property indicating how long the secret
                            contents will be considered valid, expressed in ISO 8601
                            format. The secret needs to be updated when the secret
                            content expires. The timer resets after you update the
                            secret contents. The minimum value is 1 day and the maximum
                            value is 90 days for this property. Currently, only intervals
                            expressed in days are supported. For example, pass P3D
                            to have the secret version expire every 3 days.
                          type: string
                        timeOfAbsoluteExpiry:
                          description: '(Applicable when rule_type=SECRET_EXPIRY_RULE)
                            (Updatable) An optional property indicating the absolute
                            time when this secret will expire, expressed in RFC 3339
                            timestamp format. The minimum number of days from current
                            time is 1 day and the maximum number of days from current
                            time is 365 days. Example: 2019-04-03T21:10:29.600Z'
                          type: string
                      required:
                      - ruleType
                      type: object
                    type: array
                  vaultId:
                    description: The OCID of the vault where you want to create the
                      secret.
                    type: string
                  vaultIdRef:
                    description: Reference to a Vault in kms to populate vaultId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  vaultIdSelector:
                    description: Selector for a Vault in kms to populate vaultId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                required:
                - secretName
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: SecretStatus defines the observed state of Secret.
            properties:
              atProvider:
                properties:
                  currentVersionNumber:
                    description: The version number of the secret version that's currently
                      in use.
                    type: string
                  id:
                    description: The OCID of the secret.
                    type: string
                  lastRotationTime:
                    description: 'A property indicating when the secret was last rotated
                      successfully, expressed in RFC 3339 timestamp format. Example:
                      2019-04-03T21:10:29.600Z'
                    type: string
                  lifecycleDetails:
                    description: Additional information about the current lifecycle
                      state of the secret.
                    type: string
                  nextRotationTime:
                    description: 'A property indicating when the secret is scheduled
                      to be rotated, expressed in RFC 3339 timestamp format. Example:
                      2019-04-03T21:10:29.600Z'
                    type: string
                  rotationStatus:
                    description: Additional information about the status of the secret
                      rotation
                    type: string
                  state:
                    description: The current lifecycle state of the secret.
                    type: string
                  timeCreated:
                    description: 'A property indicating when the secret was created,
                      expressed in RFC 3339 timestamp format. Example: 2019-04-03T21:10:29.600Z'
                    type: string
                  timeOfCurrentVersionExpiry:
                    description: 'An optional property indicating when the current
                      secret version will expire, expressed in RFC 3339 timestamp
                      format. Example: 2019-04-03T21:10:29.600Z'
                    type: string
                  timeOfDeletion:
                    description: 'An optional property indicating when to delete the
                      secret, expressed in RFC 3339 timestamp format. Example: 2019-04-03T21:10:29.600Z'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
